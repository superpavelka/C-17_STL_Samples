#include<vector>
// Ќовые правила инициализатора с фигурными скобками

// auto var_name { element }; var_name имеет тип element
// auto var_name { element1, element2, ...}; недействительна, ошибка компил€ции
// auto var_name = { element1, element2, ...}; var_name имеет тип std::initializer_list<T>, T - тип element 

// “еперь {} делает процесс более €вным, выбираетс€ единственный конструктор
// () - ближайший похожий конструктор плюс приведение типов

// Ѕез выведени€ типа auto
// “ри идентичных способа инициализировать переменную
int x1 = 1;
int x2 { 1 };
int x3 (1);
// вектор содержащий 1,2,3
std::vector<int> v1 { 1, 2, 3 };
std::vector<int> v2 = { 1, 2, 3 };
// вектор содержащий дес€ть переменных со значением 20
std::vector<int> v3 (10, 20);
// — выведением типа auto
auto v { 1 }; // int
auto w { 1,2 }; // ошибка: при автоматическом выведении типа 
				// непосредственна€ инициализаци€ разрешена только одиночными элементами(нововведение)
auto x = { 1 }; // имеет тип std::initializer_list<int>
auto y = { 1, 2 }; // имеет тип std::initializer_list<int>
auto z = { 1, 2.0, 3 }; // ошибка нельз€ вывести тип элемента